<?xml version="1.0" encoding="UTF-8"?>
<!--
    Checkstyle-Addons - Additional Checkstyle checks
    Copyright (c) 2015-2022, the Checkstyle Addons contributors

    This program is free software: you can redistribute it and/or modify it under the
    terms of the GNU General Public License, version 3, as published by the Free
    Software Foundation.

    This program is distributed in the hope that it will be useful, but WITHOUT ANY
    WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
    PARTICULAR PURPOSE. See the GNU General Public License for more details.

    You should have received a copy of the GNU General Public License along with this
    program.  If not, see http://www.gnu.org/licenses/.
 -->
<!DOCTYPE module PUBLIC "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
        "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">

<module name="Checker">
    <property name="severity" value="warning"/>
    <property name="charset" value="UTF-8"/>

    <module name="NewlineAtEndOfFile">
        <property name="fileExtensions" value="csv,java,properties,txt,xml"/>
    </module>
    <module name="FileTabCharacter"/>
    <module name="FileLength">
        <property name="fileExtensions" value="java"/>
        <property name="severity" value="info"/>
        <property name="max" value="1500"/>
    </module>
    <module name="RegexpSingleline">
        <property name="fileExtensions" value="java,properties,txt,xml"/>
        <property name="severity" value="info"/>
        <property name="format" value="\S\s{2}\s+$"/>
        <property name="message" value="Line has trailing spaces."/>
    </module>
    <module name="JavadocPackage">
        <property name="allowLegacy" value="false"/>
    </module>
<!--    <module name="Header">-->
<!--        <property name="fileExtensions" value="java"/>-->
<!--        <property name="headerFile" value="${workspace_loc}/config/java.header"/>-->
<!--        <property name="ignoreLines" value="1"/>-->
<!--    </module>-->
<!--    <module name="Header">-->
<!--        <property name="fileExtensions" value="xml"/>-->
<!--        <property name="headerFile" value="${workspace_loc}/config/xml.header"/>-->
<!--    </module>-->
<!--    <module name="SuppressionFilter">-->
<!--        <property name="file" value="${workspace_loc}/config/suppressions.xml"/>-->
<!--    </module>-->
    <module name="LineLength">
        <property name="max" value="120"/>
        <property name="tabWidth" value="4"/>
    </module>

    <module name="TreeWalker">
        <property name="tabWidth" value="4"/>
<!--        <module name="FileContentsHolder"/>-->

        <!-- Naming Conventions -->
        <module name="LocalVariableName">
            <property name="format"
                      value="(?:^[a-z&amp;&amp;[^lo]]$)|(?:^(?:(?:[a-z&amp;&amp;[^ipsm]][A-Z])|(?:[a-z][a-z0-9]))[a-zA-Z0-9]{0,30}$)"/>
            <message key="name.invalidPattern"
                     value="''{0}'' is an invalid identifier. Shorter than 33 characters, start with lowercase letter, not ''o'' or ''l'', no misleading prefixes. The regex: {1}"/>
        </module>
        <module name="LocalFinalVariableName">
            <property name="format"
                      value="(?:^[a-z&amp;&amp;[^lo]]$)|(?:^(?:(?:[a-z&amp;&amp;[^ipsm]][A-Z])|(?:[a-z][a-z0-9]))[a-zA-Z0-9]{0,30}$)"/>
            <message key="name.invalidPattern"
                     value="''{0}'' is an invalid identifier. Shorter than 33 characters, start with lowercase letter, not ''o'' or ''l'', no misleading prefixes. The regex: {1}"/>
        </module>
        <module name="StaticVariableName">
            <property name="format" value="^s[A-Z][a-zA-Z0-9]{0,30}$"/>
            <message key="name.invalidPattern"
                     value="''{0}'' is an invalid identifier. Shorter than 33 characters, prefix ''s'' required. The regex: {1}"/>
        </module>
        <module name="ParameterName">
            <property name="format" value="^p[A-Z][a-zA-Z0-9]{0,30}$"/>
            <message key="name.invalidPattern"
                     value="''{0}'' is an invalid identifier. Shorter than 33 characters, prefix ''p'' required. The regex: {1}"/>
        </module>
        <module name="MethodTypeParameterName">
            <property name="format" value="^[A-Z][0-9]?$"/>
            <message key="name.invalidPattern"
                     value="''{0}'' is an invalid identifier. Type parameters must be single uppercase letters, optionally followed by a single numeral. The regex: {1}"/>
        </module>
        <module name="ClassTypeParameterName">
            <property name="format" value="^[A-Z][0-9]?$"/>
            <message key="name.invalidPattern"
                     value="''{0}'' is an invalid identifier. Type parameters must be single uppercase letters, optionally followed by a single numeral. The regex: {1}"/>
        </module>
        <module name="TypeName">
            <property name="id" value="TypeNameMain"/>
<!--            <property name="severity" value="error"/>-->
            <property name="format" value="^[A-Z][a-zA-Z0-9]{0,31}?(?:Exception)?$"/>
            <message key="name.invalidPattern"
                     value="''{0}'' is an invalid identifier. Use upper camel case, not longer than 32 characters (41 for exceptions). The regex: {1}"/>
        </module>
        <module name="TypeName">
            <property name="id" value="TypeNameTest"/>
<!--            <property name="severity" value="error"/>-->
            <property name="format" value="^[A-Z][a-zA-Z0-9]{0,31}?(?:Exception)?(?:Test)?$"/>
            <message key="name.invalidPattern"
                     value="''{0}'' is an invalid identifier. Use upper camel case, not longer than 32 characters (+9 for exceptions, +4 for tests). The regex: {1}"/>
        </module>
        <module name="AbstractClassName">
            <property name="format" value="^Abstract[A-Z].*$"/>
        </module>
        <module name="MemberName">
            <property name="format"
                      value="(?:^[a-z][a-z0-9][a-zA-Z0-9]{0,30}$)|(?:^[a-z&amp;&amp;[^lps]][A-Z][a-zA-Z0-9]{0,30}$)"/>
            <message key="name.invalidPattern"
                     value="''{0}'' is an invalid identifier. Length must be 2-32 characters, prefix must not be ''l'', ''p'', or ''s''. The regex: {1}"/>
        </module>
        <module name="PackageName">
            <property name="format" value="^[a-z]+(?:\.[a-z][a-z0-9]*)*$"/>
            <message key="name.invalidPattern"
                     value="''{0}'' is an invalid package name. Use only lowercase a-z and digits, begin each fragment with a letter. The regex: {1}"/>
        </module>
        <module name="MethodName">
            <property name="id" value="MethodNameMain"/>
            <property name="format" value="^[a-z][a-zA-Z0-9]{0,31}$"/>
            <message key="name.invalidPattern"
                     value="''{0}'' is an invalid identifier. Use lower camel case, not longer than 32 characters. The regex: {1}"/>
        </module>
        <module name="MethodName">
            <property name="id" value="MethodNameTest"/>
            <property name="format" value="^[a-z][a-zA-Z0-9]*(?:_[a-zA-Z0-9]+)*$"/>
            <message key="name.invalidPattern"
                     value="''{0}'' is an invalid identifier. Use lower camel case. The regex: {1}"/>
        </module>
        <module name="ConstantName">
            <property name="format" value="^(?=.{1,32}$)[A-Z][A-Z0-9]*(?:_[A-Z0-9]+)*$"/>
            <message key="name.invalidPattern"
                     value="''{0}'' is an invalid identifier. Use constant case, not longer than 32 characters. The regex: {1}"/>
        </module>

        <!-- Formatting -->
        <module name="AnnotationUseStyle"/>
        <module name="TypecastParenPad"/>
        <module name="ParenPad"/>
        <module name="EmptyForIteratorPad"/>
        <module name="MethodParamPad"/>
        <module name="GenericWhitespace"/>
        <module name="NoWhitespaceBefore"/>
        <module name="WhitespaceAfter"/>
        <module name="ArrayTypeStyle"/>
        <module name="WhitespaceAround"/>
        <module name="ModifierOrder"/>
        <module name="NoWhitespaceAfter"/>
        <module name="NeedBraces"/>
        <module name="LeftCurly">
            <property name="option" value="nl"/>
            <property name="tokens" value="CLASS_DEF,CTOR_DEF,INTERFACE_DEF,METHOD_DEF"/>
        </module>
        <module name="LeftCurly">
            <property name="option" value="eol"/>
            <property name="tokens" value="LITERAL_DO,LITERAL_ELSE,LITERAL_FINALLY,LITERAL_TRY"/>
        </module>
        <module name="RightCurly">
            <property name="option" value="alone"/>
        </module>
        <module name="DeclarationOrder">
            <property name="ignoreModifiers" value="true"/>
        </module>
<!--        <module name="LineLength">-->
<!--            <property name="max" value="120"/>-->
<!--            <property name="tabWidth" value="4"/>-->
<!--        </module>-->

        <!-- Documentation -->
        <module name="JavadocType"/>
        <module name="JavadocMethod">
            <property name="scope" value="protected"/>
<!--            <property name="allowUndeclaredRTE" value="true"/>-->
<!--            <property name="allowThrowsTagsForSubclasses" value="true"/>-->
<!--            <property name="allowMissingPropertyJavadoc" value="true"/>-->
<!--            <property name="allowMissingJavadoc" value="true"/>-->
        </module>
        <module name="JavadocStyle">
            <property name="checkEmptyJavadoc" value="true"/>
            <property name="checkFirstSentence" value="false"/>
            <property name="checkHtml" value="true"/>
        </module>

        <!-- Architectural Constraints -->
        <module name="IllegalImport">
            <property name="severity" value="error"/>
            <property name="illegalPkgs" value="com.sun,sun"/>
        </module>
        <module name="IllegalType">
            <property name="illegalClassNames" value="java.util.HashSet, java.util.HashMap, java.util.LinkedHashMap, java.util.LinkedHashSet, java.util.TreeSet, java.util.TreeMap,java.util.GregorianCalendar"/>
<!--            <property name="format" value="^(?!x)x"/>-->
        </module>
        <module name="IllegalToken">
            <property name="tokens" value="LITERAL_NATIVE"/>
            <message key="illegal.token" value="Native code is not alllowed (token: ''{0}'')"/>
        </module>
        <module name="TodoComment">
            <property name="format" value="(?i)CHECKSTYLE:O(?:FF|N)"/>
            <message key="todo.match" value="Illegal checkstyle suppression comment has no effect"/>
        </module>

        <!-- Metrics -->
        <module name="AnonInnerLength">
            <property name="max" value="100"/>
        </module>
        <module name="BooleanExpressionComplexity">
            <property name="max" value="5"/>
        </module>
        <module name="ExecutableStatementCount">
            <property name="max" value="60"/>
        </module>
        <module name="NestedTryDepth">
            <property name="max" value="2"/>
        </module>
        <module name="ParameterNumber">
            <property name="tokens" value="METHOD_DEF"/>
        </module>
        <module name="ThrowsCount">
            <property name="max" value="5"/>
        </module>

        <!-- Coding Problems -->
        <module name="AvoidNestedBlocks">
            <property name="allowInSwitchCase" value="true"/>
        </module>
        <module name="AvoidStarImport"/>
        <module name="AvoidStaticImport"/>
        <module name="CovariantEquals"/>
        <module name="DefaultComesLast"/>
        <module name="EmptyBlock">
            <property name="option" value="text"/>
        </module>
        <module name="EmptyStatement"/>
        <module name="EqualsAvoidNull"/>
        <module name="EqualsHashCode"/>
        <module name="FallThrough"/>
        <module name="FinalClass"/>
        <module name="FinalParameters"/>
        <module name="HiddenField"/>
        <module name="HideUtilityClassConstructor"/>
        <module name="IllegalCatch">
            <property name="illegalClassNames"
                      value="java.lang.Error,java.lang.Throwable,java.lang.NullPointerException,java.lang.IllegalMonitorStateException"/>
        </module>
        <module name="IllegalThrows"/>
        <module name="IllegalTokenText">
            <property name="tokens" value="NUM_INT,NUM_LONG"/>
            <property name="format" value="^0[^blx]"/>
            <property name="ignoreCase" value="true"/>
            <property name="message" value="Octal literals are not allowed."/>
        </module>
        <module name="InnerAssignment"/>
        <module name="InterfaceIsType"/>
        <module name="MagicNumber">
            <property name="ignoreHashCodeMethod" value="true"/>
            <property name="ignoreAnnotation" value="true"/>
        </module>
        <module name="MissingDeprecated"/>
        <module name="MissingSwitchDefault"/>
        <module name="MultipleVariableDeclarations"/>
        <module name="MutableException"/>
        <module name="NestedIfDepth">
            <property name="max" value="5"/>
        </module>
        <module name="NoFinalizer">
            <property name="severity" value="error"/>
        </module>
        <module name="OneStatementPerLine"/>
        <module name="OperatorWrap"/>
        <module name="OuterTypeNumber">
            <property name="severity" value="error"/>
        </module>
        <module name="PackageAnnotation"/>
        <module name="PackageDeclaration"/>
        <module name="ParameterAssignment"/>
        <module name="RedundantImport"/>
        <module name="RedundantModifier">
            <property name="tokens"
                      value="METHOD_DEF, VARIABLE_DEF, ANNOTATION_FIELD_DEF, INTERFACE_DEF, CLASS_DEF, ENUM_DEF"/>
        </module>
        <module name="SimplifyBooleanExpression"/>
        <module name="SimplifyBooleanReturn"/>
        <module name="StringLiteralEquality"/>
        <module name="SuperClone"/>
        <module name="UnusedImports">
            <property name="processJavadoc" value="true"/>
        </module>
        <module name="UpperEll"/>
        <module name="VisibilityModifier"/>

    </module>
</module>
